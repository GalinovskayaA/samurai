[{"D:\\it\\04\\my-app\\src\\components\\header\\HeaderContainer.tsx":"1","D:\\it\\04\\my-app\\src\\components\\profile\\ProfileContainer.tsx":"2","D:\\it\\04\\my-app\\src\\components\\users\\Users.tsx":"3","D:\\it\\04\\my-app\\src\\components\\users\\UsersContainer.tsx":"4","D:\\it\\04\\my-app\\src\\api\\api.js":"5","D:\\it\\04\\my-app\\src\\redux\\UsersReduser.tsx":"6","D:\\it\\04\\my-app\\src\\reportWebVitals.js":"7","D:\\it\\04\\my-app\\src\\index.tsx":"8","D:\\it\\04\\my-app\\src\\redux\\redux-store.tsx":"9","D:\\it\\04\\my-app\\src\\App.tsx":"10","D:\\it\\04\\my-app\\src\\redux\\DialogsReduser.tsx":"11","D:\\it\\04\\my-app\\src\\redux\\FriendsReduser.tsx":"12","D:\\it\\04\\my-app\\src\\redux\\ProfileReduser.tsx":"13","D:\\it\\04\\my-app\\src\\redux\\AuthReduser.tsx":"14","D:\\it\\04\\my-app\\src\\components\\news\\News.tsx":"15","D:\\it\\04\\my-app\\src\\components\\nav\\nav.tsx":"16","D:\\it\\04\\my-app\\src\\components\\setting\\Setting.tsx":"17","D:\\it\\04\\my-app\\src\\components\\dialogs\\DialogsContainer.tsx":"18","D:\\it\\04\\my-app\\src\\components\\profile\\profile.tsx":"19","D:\\it\\04\\my-app\\src\\components\\common\\preloader.tsx":"20","D:\\it\\04\\my-app\\src\\components\\friends\\Friend.tsx":"21","D:\\it\\04\\my-app\\src\\components\\profile\\ProfileInfo\\ProfileInfo.tsx":"22","D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\Post\\Post.tsx":"23","D:\\it\\04\\my-app\\src\\components\\dialogs\\DialogsElements.tsx":"24","D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\MyPostsContainer.tsx":"25","D:\\it\\04\\my-app\\src\\components\\nav\\navBar.tsx":"26","D:\\it\\04\\my-app\\src\\components\\header\\header.tsx":"27","D:\\it\\04\\my-app\\src\\AppContainer.tsx":"28","D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\MyPosts.tsx":"29","D:\\it\\04\\my-app\\src\\components\\music\\Music.tsx":"30","D:\\it\\04\\my-app\\src\\components\\friends\\Friends.tsx":"31","D:\\it\\04\\my-app\\src\\components\\dialogs\\Dialogs.tsx":"32","D:\\it\\04\\my-app\\src\\Hoc\\withAuthRedirect.tsx":"33","D:\\it\\04\\my-app\\src\\components\\dialogs\\Messege\\Message.tsx":"34","D:\\it\\04\\my-app\\src\\components\\Login\\Login.tsx":"35","D:\\it\\04\\my-app\\src\\components\\dialogs\\DialogItem\\DialogsItem.tsx":"36","D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\Post\\Textarea.tsx":"37","D:\\it\\04\\my-app\\src\\utils\\validators\\validators.tsx":"38","D:\\it\\04\\my-app\\src\\components\\common\\FormsControls.tsx":"39","D:\\it\\04\\my-app\\src\\components\\login\\Login.tsx":"40","D:\\it\\04\\my-app\\src\\components\\login\\LoginReduxForm.tsx":"41","D:\\it\\04\\my-app\\src\\redux\\AppReduser.tsx":"42","D:\\it\\04\\my-app\\src\\redux\\users-selectors.tsx":"43","D:\\it\\04\\my-app\\src\\components\\profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"44","D:\\it\\04\\my-app\\src\\utils\\objects-helper.tsx":"45","D:\\it\\04\\my-app\\src\\components\\common\\paginator\\Paginator.tsx":"46","D:\\it\\04\\my-app\\src\\components\\users\\User.tsx":"47","D:\\it\\04\\my-app\\src\\components\\common\\avatar.tsx":"48","D:\\it\\04\\my-app\\src\\components\\common\\paginator\\MultiRangeSlider.tsx":"49","D:\\it\\04\\my-app\\src\\components\\common\\paginator\\utils.tsx":"50","D:\\it\\04\\my-app\\src\\components\\common\\paginator\\Select.tsx":"51","D:\\it\\04\\my-app\\src\\Hoc\\withSuspense.tsx":"52"},{"size":979,"mtime":1622912852002,"results":"53","hashOfConfig":"54"},{"size":2807,"mtime":1623591724469,"results":"55","hashOfConfig":"54"},{"size":2192,"mtime":1624477789429,"results":"56","hashOfConfig":"54"},{"size":3588,"mtime":1624557752395,"results":"57","hashOfConfig":"54"},{"size":1445,"mtime":1619004254846,"results":"58","hashOfConfig":"54"},{"size":6242,"mtime":1624478829355,"results":"59","hashOfConfig":"54"},{"size":362,"mtime":1609770448562,"results":"60","hashOfConfig":"54"},{"size":331,"mtime":1623688572023,"results":"61","hashOfConfig":"54"},{"size":1069,"mtime":1623595382923,"results":"62","hashOfConfig":"54"},{"size":2921,"mtime":1624560661285,"results":"63","hashOfConfig":"54"},{"size":2248,"mtime":1618589865791,"results":"64","hashOfConfig":"54"},{"size":1713,"mtime":1614355691337,"results":"65","hashOfConfig":"54"},{"size":6560,"mtime":1623093152745,"results":"66","hashOfConfig":"54"},{"size":2558,"mtime":1623093314644,"results":"67","hashOfConfig":"54"},{"size":145,"mtime":1611340620582,"results":"68","hashOfConfig":"54"},{"size":1166,"mtime":1622571103872,"results":"69","hashOfConfig":"54"},{"size":154,"mtime":1611340620571,"results":"70","hashOfConfig":"54"},{"size":2342,"mtime":1622737124988,"results":"71","hashOfConfig":"54"},{"size":278,"mtime":1623592080998,"results":"72","hashOfConfig":"54"},{"size":191,"mtime":1623592341451,"results":"73","hashOfConfig":"54"},{"size":331,"mtime":1614355691323,"results":"74","hashOfConfig":"54"},{"size":779,"mtime":1623592827894,"results":"75","hashOfConfig":"54"},{"size":632,"mtime":1612623545485,"results":"76","hashOfConfig":"54"},{"size":1480,"mtime":1618589865757,"results":"77","hashOfConfig":"54"},{"size":2707,"mtime":1622914840883,"results":"78","hashOfConfig":"54"},{"size":254,"mtime":1611343154600,"results":"79","hashOfConfig":"54"},{"size":636,"mtime":1619012798240,"results":"80","hashOfConfig":"54"},{"size":744,"mtime":1623688572050,"results":"81","hashOfConfig":"54"},{"size":1540,"mtime":1622984089497,"results":"82","hashOfConfig":"54"},{"size":150,"mtime":1611340620592,"results":"83","hashOfConfig":"54"},{"size":468,"mtime":1614366062519,"results":"84","hashOfConfig":"54"},{"size":959,"mtime":1618589937810,"results":"85","hashOfConfig":"54"},{"size":1462,"mtime":1622904821451,"results":"86","hashOfConfig":"54"},{"size":289,"mtime":1612208350259,"results":"87","hashOfConfig":"54"},{"size":1038,"mtime":1618488151557,"results":"88","hashOfConfig":"54"},{"size":555,"mtime":1612208350275,"results":"89","hashOfConfig":"54"},{"size":875,"mtime":1618865691167,"results":"90","hashOfConfig":"54"},{"size":536,"mtime":1618861355451,"results":"91","hashOfConfig":"54"},{"size":1093,"mtime":1623345230264,"results":"92","hashOfConfig":"54"},{"size":1059,"mtime":1623340654283,"results":"93","hashOfConfig":"54"},{"size":1161,"mtime":1623341422159,"results":"94","hashOfConfig":"54"},{"size":1053,"mtime":1622653931202,"results":"95","hashOfConfig":"54"},{"size":905,"mtime":1623338967641,"results":"96","hashOfConfig":"54"},{"size":1314,"mtime":1623591083337,"results":"97","hashOfConfig":"54"},{"size":322,"mtime":1623339051000,"results":"98","hashOfConfig":"54"},{"size":4533,"mtime":1624477562965,"results":"99","hashOfConfig":"54"},{"size":1449,"mtime":1623592827887,"results":"100","hashOfConfig":"54"},{"size":330,"mtime":1623592827932,"results":"101","hashOfConfig":"54"},{"size":6072,"mtime":1624044531269,"results":"102","hashOfConfig":"54"},{"size":808,"mtime":1624043845370,"results":"103","hashOfConfig":"54"},{"size":1270,"mtime":1624556310390,"results":"104","hashOfConfig":"54"},{"size":404,"mtime":1624560647664,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1hxrnm2",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"111"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"173"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"156"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"156"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"156"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"173"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"111"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"108"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"108"},"D:\\it\\04\\my-app\\src\\components\\header\\HeaderContainer.tsx",[],["233","234"],"D:\\it\\04\\my-app\\src\\components\\profile\\ProfileContainer.tsx",[],["235","236"],"D:\\it\\04\\my-app\\src\\components\\users\\Users.tsx",["237","238","239","240","241","242","243","244"],"D:\\it\\04\\my-app\\src\\components\\users\\UsersContainer.tsx",["245"],"import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n  followSuccess, getUsersThunkCreator,\r\n  setCurrentPage,\r\n  setUsers,\r\n  setUsersTotalCount, toggleIsFetching,\r\n  unfollowSuccess,\r\n  UsersType, unfollowThunkCreator, followThunkCreator, setPageSize\r\n} from \"../../redux/UsersReduser\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {\r\n  getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector,\r\n  getPageSizeSelector,\r\n  getTotalUsersCountSelector, getUsersSuperSelector,\r\n} from \"../../redux/users-selectors\";\r\nimport Select from \"../common/paginator/Select\";\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\r\n  avatar = \"https://cdn.pixabay.com/photo/2016/04/02/04/57/comic-1302161_1280.png\"\r\n\r\n  componentDidMount() {\r\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    this.props.setPageSize( this.props.pageSize)\r\n  }\r\n\r\n  onPageChanged = (currentPage: number) => {\r\n    this.props.getUsersThunkCreator(currentPage, this.props.pageSize);\r\n  }\r\n\r\n\r\n  render() {\r\n    return <>\r\n      <div>\r\n        {this.props.isFetching ? <Preloader/> : null}\r\n      </div>\r\n      <Select/>\r\n      <Users onPageChanged={this.onPageChanged}\r\n             followSuccess={this.props.followSuccess}\r\n             unfollowSuccess={this.props.unfollowSuccess}\r\n             currentPage={this.props.currentPage}\r\n             pageSize={this.props.pageSize}\r\n             totalUsersCount={this.props.totalUsersCount}\r\n             users={this.props.users}\r\n             isFetching={this.props.isFetching}\r\n             setPageSize={this.props.setPageSize}\r\n             followingInProgress={this.props.followingInProgress}\r\n             followThunkCreator={this.props.followThunkCreator}\r\n             unfollowThunkCreator={this.props.unfollowThunkCreator}/>\r\n\r\n\r\n    </>\r\n  }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n  users: Array<UsersType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: Array<string>\r\n}\r\ntype MapDispatchPropsType = {\r\n  followSuccess: (usersID: string) => void,\r\n  unfollowSuccess: (usersID: string) => void,\r\n  setUsers: (users: Array<UsersType>) => void\r\n  setCurrentPage: (currentPage: number) => void\r\n  setPageSize: (pageSize: number) => void\r\n  setUsersTotalCount: (count: number) => void\r\n  toggleIsFetching: (isFetching: boolean) => void\r\n  followThunkCreator: (userID: string) => void\r\n  unfollowThunkCreator: (userID: string) => void\r\n  getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n}\r\nexport type UsersContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: StoreStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsersSuperSelector(state),\r\n    pageSize: getPageSizeSelector(state),\r\n    totalUsersCount: getTotalUsersCountSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    isFetching: getIsFetchingSelector(state),\r\n    followingInProgress: getFollowingInProgressSelector(state),\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    followSuccess, unfollowSuccess, setUsers,\r\n    setCurrentPage, setPageSize, setUsersTotalCount, toggleIsFetching,\r\n    followThunkCreator, unfollowThunkCreator, getUsersThunkCreator,\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n","D:\\it\\04\\my-app\\src\\api\\api.js",[],["246","247"],"D:\\it\\04\\my-app\\src\\redux\\UsersReduser.tsx",[],"D:\\it\\04\\my-app\\src\\reportWebVitals.js",[],["248","249"],"D:\\it\\04\\my-app\\src\\index.tsx",[],"D:\\it\\04\\my-app\\src\\redux\\redux-store.tsx",[],"D:\\it\\04\\my-app\\src\\App.tsx",[],"D:\\it\\04\\my-app\\src\\redux\\DialogsReduser.tsx",[],"D:\\it\\04\\my-app\\src\\redux\\FriendsReduser.tsx",[],"D:\\it\\04\\my-app\\src\\redux\\ProfileReduser.tsx",[],"D:\\it\\04\\my-app\\src\\redux\\AuthReduser.tsx",[],"D:\\it\\04\\my-app\\src\\components\\news\\News.tsx",[],"D:\\it\\04\\my-app\\src\\components\\nav\\nav.tsx",[],"D:\\it\\04\\my-app\\src\\components\\setting\\Setting.tsx",[],"D:\\it\\04\\my-app\\src\\components\\dialogs\\DialogsContainer.tsx",["250","251","252","253","254","255","256","257","258","259","260"],"import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message, {MessageDataType} from \"./Messege/Message\";\r\nimport DialogItem, {DialogsDataType} from \"./DialogItem/DialogsItem\";\r\nimport {v1} from \"uuid\";\r\nimport DialogsMessages from \"./DialogsElements\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {DialogsPropsType, sendMessageCreator} from \"../../redux/DialogsReduser\";\r\nimport {StoreStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\n\r\n\r\ntype MapStatePropsType = {\r\n  dialogsData: Array<DialogsDataType>\r\n  messageData: Array<MessageDataType>\r\n  newMessageBody: string\r\n/*  isAuth: boolean*/\r\n}\r\ntype MapDispatchPropsType = {\r\n  addSendMessageClick: (message: string) => void\r\n//  updateNewMessageCreator: (message: string) => void\r\n}\r\nexport type DialogsContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStatePropsType => {\r\n  console.log(state)\r\n  return {\r\n    dialogsData: state.dialogPage.dialogsData,\r\n    messageData: state.dialogPage.messageData,\r\n    newMessageBody: state.dialogPage.newMessageBody,\r\n/*    isAuth: state.auth.isAuth*/\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n  return {\r\n    addSendMessageClick: (message: string) => {\r\n      dispatch(sendMessageCreator(message));\r\n    },\r\n\r\n   /* updateNewMessageCreator: (message: string) => {\r\n      dispatch(updateNewMessageCreator(message));\r\n    }*/ // -----> // не нужно, так как есть Redux-form\r\n  }\r\n}\r\n\r\n/*const AuthRedirectComponent = (props: DialogsContainerPropsType) => {\r\n  if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n  return <Dialogs {...props}/>\r\n}\r\n\r\ncompose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\nconst AuthRedirectComponent: any = withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);*/\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","D:\\it\\04\\my-app\\src\\components\\profile\\profile.tsx",[],"D:\\it\\04\\my-app\\src\\components\\common\\preloader.tsx",[],"D:\\it\\04\\my-app\\src\\components\\friends\\Friend.tsx",[],"D:\\it\\04\\my-app\\src\\components\\profile\\ProfileInfo\\ProfileInfo.tsx",[],["261","262"],"D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\Post\\Post.tsx",[],"D:\\it\\04\\my-app\\src\\components\\dialogs\\DialogsElements.tsx",["263","264"],"import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport Message from \"./Messege/Message\";\r\nimport {DialogsContainerPropsType} from \"./DialogsContainer\";\r\nimport {TextareaFormType} from \"../profile/MyPosts/MyPosts\";\r\nimport {AddMessageReduxForm} from \"../profile/MyPosts/Post/Textarea\";\r\n\r\n\r\nconst DialogsMessages = (props: DialogsContainerPropsType) => {\r\n  let message = props.newMessageBody\r\n  const addNewMessage = (values: TextareaFormType) => {\r\n    props.addSendMessageClick(values.textarea)\r\n  }\r\n\r\n  /*const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n     props.updateNewMessageCreator(e.currentTarget.value)\r\n  }*/\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      props.addSendMessageClick(message);\r\n    }\r\n  }\r\n\r\n  const messageElements = props.messageData.map ((m) => (<Message key={m.id} id={m.id} message={m.message}/>))\r\n\r\n    return (\r\n          <div>\r\n            {/*<div><textarea value={message}\r\n                           onChange={onNewMessageChange}\r\n                           onKeyPress={onKeyPressHandler}\r\n                           placeholder={'Enter your message'}> </textarea></div>\r\n            <div><button onClick={ () => props.addSendMessageClick(message) }> add </button></div>*/}\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n            <div> { messageElements } </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default DialogsMessages;",["265","266"],"D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\MyPostsContainer.tsx",["267","268","269","270","271","272","273","274","275","276","277"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post, {MyPostsType} from \"./Post/Post\";\r\nimport StoreContext from \"../../../StoreContext\";\r\nimport {Dispatch, Store} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {\r\n  addPostAC, getUserProfileTC,\r\n  NetworkDataType,\r\n  ProfileInfoDataType,\r\n  ProfileType, setUserProfileAC,\r\n  updateNewPostTextAC, userIsFetching\r\n} from \"../../../redux/ProfileReduser\";\r\nimport {StoreStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\n/*const MyPostsContainer = (props: MyPostsPropsType) => {\r\n\r\n  let [message, setMessage] = useState(props.newMessage)\r\n  let [arrayMyPosts, setArrayMyPosts] = useState(props.arrayMyPosts);\r\n\r\n  const addPost = () => {\r\n    if (message.trim() !== \"\") {\r\n      store.dispatch(updateNewPostTextActionCreator(message))\r\n      setMessage('')\r\n      setArrayMyPosts(props.arrayMyPosts)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      { (store) => {\r\n        return (\r\n          <MyPosts addPost={addPost}\r\n                        arrayMyPosts={props.arrayMyPosts}\r\n                        newMessage={props.newMessage}/>\r\n                        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}*/\r\n\r\ntype MapStatePropsType = {\r\n  newMessage: string,\r\n  networkData: NetworkDataType,\r\n  profileInfoData: ProfileInfoDataType,\r\n  arrayMyPosts: Array<MyPostsType>,\r\n  profile: ProfileType,\r\n  isFetching: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n  addPostAC: (message: string)  => void\r\n  updateNewPostTextAC: (text: string) => void\r\n  getUserProfileTC: (userId: number) => void\r\n  userIsFetching: (isFetching: boolean) => void\r\n}\r\ntype ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: StoreStateType): MapStatePropsType => {\r\n  console.log(state)\r\n  return {\r\n    newMessage: state.profilePage.newMessage,\r\n    networkData: state.profilePage.networkData,\r\n    profileInfoData: state.profilePage.profileInfoData,\r\n    arrayMyPosts: state.profilePage.arrayMyPosts,\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching\r\n  }\r\n}\r\n/*let mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n  return {\r\n    addPostAC: (message: string) => {\r\n      dispatch(addPostAC(message))\r\n    },\r\n    updateNewPostTextAC: (message: string) => {\r\n      dispatch(updateNewPostTextAC(message))\r\n    }\r\n  }\r\n}*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPostAC,\r\n  updateNewPostTextAC,\r\n  getUserProfileTC,\r\n  /*setUserProfileAC,*/\r\n  userIsFetching\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","D:\\it\\04\\my-app\\src\\components\\nav\\navBar.tsx",[],"D:\\it\\04\\my-app\\src\\components\\header\\header.tsx",[],"D:\\it\\04\\my-app\\src\\AppContainer.tsx",["278","279","280"],"import React from 'react';\nimport {connect, Provider} from \"react-redux\";\nimport App from \"./App\";\nimport store, {StoreStateType} from \"./redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n\n\nconst mapStateToProps = (state: StoreStateType) => {\n  return {\n    profilePage: state.profilePage,\n    dialogPage: state.dialogPage,\n    friendPage: state.friendPage,\n    networkData: state.profilePage.networkData,\n    newMessage: state.profilePage.newMessage\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {}\n}\n\nconst SamuraiAppContainer = () => {\n  return <HashRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </HashRouter>\n}\n\nexport default SamuraiAppContainer;\n",["281","282"],"D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\MyPosts.tsx",["283","284"],"import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post, {MyPostsType} from \"./Post/Post\";\r\nimport {AddMessageReduxForm} from \"./Post/Textarea\";\r\n\r\n\r\ntype MyPostsPropsType = {\r\n  newMessage: string,\r\n  arrayMyPosts: Array<MyPostsType>,\r\n  addPostAC: (message: string)  => void,\r\n  updateNewPostTextAC: (text: string) => void,\r\n}\r\nexport type TextareaFormType = {\r\n  textarea: string\r\n}\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n  let message = props.newMessage\r\n  const onSubmit = (formData: TextareaFormType) => {\r\n\r\n  }\r\n\r\n  const onAddPost = (value: TextareaFormType) => {\r\n    if (value.textarea.trim() !== \"\") {\r\n      props.addPostAC(value.textarea);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.MyPosts}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddMessageReduxForm onSubmit={onAddPost}/>\r\n      </div>\r\n      <div className={classes.posts}>\r\n        <Post arrayMyPosts={props.arrayMyPosts}/>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n\r\n\r\n\r\n// class MyPosts extends React.PureComponent<MyPostsPropsType>  // приставка Pure- заменяет метод жизненного цикла\r\n// shouldComponentUpdate (т.е. он прописан под копотом)\r\n\r\n/*shouldComponentUpdate(nextProps: Readonly<MyPostsPropsType>, nextState: Readonly<{}>): boolean {\r\n  return nextProps !== this.props || nextState !== this.state; // не надо перерисовываться если ничего не поменялось\r\n}*/","D:\\it\\04\\my-app\\src\\components\\music\\Music.tsx",[],"D:\\it\\04\\my-app\\src\\components\\friends\\Friends.tsx",[],"D:\\it\\04\\my-app\\src\\components\\dialogs\\Dialogs.tsx",[],"D:\\it\\04\\my-app\\src\\Hoc\\withAuthRedirect.tsx",["285"],"import {Redirect} from \"react-router-dom\";\r\nimport React, {Component, ComponentType} from \"react\";\r\nimport {StoreStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsForRedirectType = {\r\n  isAuth: boolean\r\n}\r\nconst mapStateToPropsForRedirect = (state: StoreStateType): MapStatePropsForRedirectType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\n/* Из урока Димыча на классовой компоненте\r\nexport const withAuthRedirect = (Component: any) => {\r\n  class RedirectComponent extends React.Component<MapStatePropsForRedirectType> {\r\n    render() {\r\n      console.log(this.props)\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n};*/\r\n\r\n// Из урока Инкубатора на функциональной компоненте ------->\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n  const RedirectComponent = (props: MapStatePropsForRedirectType) => {\r\n    let {isAuth, ...restProps} = props\r\n    if (!isAuth) return <Redirect to={'/login'}/>\r\n    return <Component {...restProps as T}/>\r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n  return ConnectedRedirectComponent\r\n}\r\n\r\n","D:\\it\\04\\my-app\\src\\components\\dialogs\\Messege\\Message.tsx",[],"D:\\it\\04\\my-app\\src\\components\\Login\\Login.tsx",[],"D:\\it\\04\\my-app\\src\\components\\dialogs\\DialogItem\\DialogsItem.tsx",[],["286","287"],"D:\\it\\04\\my-app\\src\\components\\profile\\MyPosts\\Post\\Textarea.tsx",["288","289"],"import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextareaFormType} from \"../MyPosts\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {TextereaFormsController} from \"../../../common/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<TextareaFormType>> = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} >\r\n      <div>\r\n        <Field name={\"textarea\"} component={TextereaFormsController} autoFocus placeholder={'Enter your message'} validate={[required, maxLength50]}/>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport const AddMessageReduxForm = reduxForm<TextareaFormType>({\r\n  form: 'textarea'\r\n})(AddMessageForm)","D:\\it\\04\\my-app\\src\\utils\\validators\\validators.tsx",[],"D:\\it\\04\\my-app\\src\\components\\common\\FormsControls.tsx",["290","291","292"],"import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\nimport {InjectedFormProps} from \"redux-form\";\r\nimport {FormDataType} from \"../login/Login\";\r\n\r\ntype TextereaFormsControllerPropsType = {\r\n  input: any\r\n  meta: MetaType\r\n}\r\n\r\ntype MetaType = {\r\n  meta: {\r\n    touched: boolean,\r\n    error: string\r\n  }\r\n}\r\n\r\nconst FormsController: React.FC<MetaType> = (\r\n  {\r\n    meta: {touched, error}, children\r\n  }) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <span> {error} </span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const TextereaFormsController = (props: any) => {\r\n  const {input, meta, children, ...restProps} = props;\r\n  return <FormsController {...props}><textarea {...props.input} {...restProps}/></FormsController>\r\n}\r\nexport const InputFormsController = (props: any) => {\r\n  const {input, meta, children, ...restProps} = props;\r\n  return <FormsController {...props}><input {...props.input} {...restProps}/></FormsController>\r\n}\r\n\r\n","D:\\it\\04\\my-app\\src\\components\\login\\Login.tsx",[],"D:\\it\\04\\my-app\\src\\components\\login\\LoginReduxForm.tsx",[],"D:\\it\\04\\my-app\\src\\redux\\AppReduser.tsx",["293"],"import { Dispatch } from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {getAuthUserData} from \"./AuthReduser\";\r\n\r\ntype AppPropsType = {\r\n  initialized: boolean,\r\n}\r\n\r\nconst initialState: AppPropsType = {\r\n  initialized: false,\r\n}\r\n\r\nexport const appReduser = (state: AppPropsType = initialState, action: AppActionType) => {\r\n  switch (action.type) {\r\n    case \"INITIALIZED-SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        initialized: action.initialized,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type AppActionType = InitializedSuccessACType\r\n\r\nexport const initializedSuccessAC = (initialized: boolean) => {\r\n  return {\r\n    type: \"INITIALIZED-SUCCESS\", initialized\r\n  }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: Dispatch) => {\r\n  // @ts-ignore\r\n  let promise = dispatch(getAuthUserData())\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccessAC(true))\r\n  })\r\n}\r\n\r\nexport type InitializedSuccessACType = {\r\n  type: \"INITIALIZED-SUCCESS\",\r\n  initialized: boolean\r\n}\r\n\r\n\r\n\r\n","D:\\it\\04\\my-app\\src\\redux\\users-selectors.tsx",["294"],"import React from \"react\";\r\nimport {StoreStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: StoreStateType) => {\r\n  return state.usersPage.users\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsersSelector, (users) => {\r\n  return users.filter(user => true)\r\n})\r\n\r\n\r\nexport const getPageSizeSelector = (state: StoreStateType) => {\r\n  return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state: StoreStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: StoreStateType) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: StoreStateType) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state: StoreStateType) => {\r\n  return state.usersPage.followingInProgress\r\n}","D:\\it\\04\\my-app\\src\\components\\profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\it\\04\\my-app\\src\\utils\\objects-helper.tsx",["295"],"import React from 'react';\r\nimport {UsersType} from \"../redux/UsersReduser\";\r\n\r\nexport function updateObjectArray (users: Array<UsersType>, itemId: string, id: string, newObjProps: {}) {\r\n  return users.map(user => {\r\n    if (user.id === itemId) {\r\n      return {...user, ...newObjProps}\r\n    }\r\n    return user\r\n  })\r\n}\r\n","D:\\it\\04\\my-app\\src\\components\\common\\paginator\\Paginator.tsx",["296"],"import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport s from \"./Paginator.module.css\"\r\n\r\n\r\ntype PaginatorPropsType = {\r\n  pageSize: number,\r\n  totalItemsCount: number,\r\n  currentPage: number,\r\n  portionSize: number,\r\n  onPageChanged: (selectedPage: number) => void\r\n}\r\n\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, portionSize, onPageChanged}: PaginatorPropsType) => {\r\n\r\n/*  let [portionNumber, setPortionNumber] = useState(1) // номер порции*/\r\n  let [value, setValue] = useState('')\r\n  let [valueSlider, setValueSlider] = useState(currentPage)\r\n\r\n  let currentValue = +value\r\n\r\n  const pagesCount = Math.ceil(totalItemsCount / pageSize) // число всего / число отобр на странице = кол-во страниц\r\n  const pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n  const portionCount = Math.ceil(pagesCount / portionSize) // кол-во стр / кол-во кнопок на ленте = кол-во порций\r\n\r\n  /*const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1 // 1, 11, 21, 31 ...\r\n  const rightPortionPageNumber = portionNumber * portionSize // 10, 20, 30 ...*/\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    Number(setValue(e.currentTarget.value))\r\n  }\r\n  const onClickButtonGo = () => {\r\n    onPageChanged(currentValue)\r\n    setValueSlider(currentValue)\r\n    setValue('')\r\n  }\r\n\r\n  const onClickPageChanged = (p: number) => {\r\n    onPageChanged(p)\r\n    setValueSlider(p)\r\n  }\r\n  const onChangeSliderPage = () => {\r\n    onPageChanged(valueSlider)\r\n  }\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      onPageChanged(currentValue)\r\n      setValueSlider(currentValue)\r\n      setValue('')\r\n    }\r\n  }\r\n  const endPages = pages\r\n    .filter(p => p >= pages.length)\r\n    .map((p) => <ShowButton currentPage={currentPage} page={p} onPageChanged={onClickPageChanged}/>\r\n    )\r\n  const startPages = pages\r\n    .filter(p => p <= 1)\r\n    .map((p) => <ShowButton currentPage={currentPage} page={p} onPageChanged={onClickPageChanged}/>)\r\n\r\n  return <div>\r\n    <div>\r\n      enter page\r\n      <input value={value} onChange={onChange} onKeyPress={onKeyPressHandler}/>\r\n      <button onClick={onClickButtonGo}> go </button>\r\n      <div>\r\n        {valueSlider > 1 &&\r\n        <button onClick={ () => onClickPageChanged(valueSlider - 1) }> prev </button>}\r\n        {valueSlider > 2 && startPages}\r\n        {valueSlider > 2 && <span> ... </span>}\r\n\r\n        {pages.filter(p => p>=valueSlider-1 && p<=valueSlider+1).map((p) => <ShowButton currentPage={valueSlider} page={p} onPageChanged={onClickPageChanged}/>)}\r\n\r\n        {valueSlider < (pagesCount - 1) && <span> ... </span>}\r\n        {valueSlider < (pagesCount - 1) && endPages}\r\n        {valueSlider < pagesCount &&\r\n        <button onClick={ () => onClickPageChanged(valueSlider + 1) }> next </button>}\r\n      </div>\r\n      <input type=\"range\" id=\"range\" value={valueSlider} step={1} onChange={e => setValueSlider(Number(e.currentTarget.value))}\r\n      onClick={onChangeSliderPage} min={1} max={pagesCount} style={{width: '50%'}}/>\r\n      <label htmlFor=\"range\"> {valueSlider + ' page'} </label>\r\n    </div>\r\n    {/*    <div>\r\n      {portionNumber > 1 &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber - 1)\r\n      }}> prev </button>}\r\n      {portionNumber > 1 && startPages}\r\n      {portionNumber > 1 && <span> ... </span>}\r\n\r\n      {pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map((p) => <ShowButton currentPage={currentPage} page={p} onPageChanged={onClickPageChanged} />\r\n        )}\r\n\r\n      {portionCount > portionNumber && <span> ... </span>}\r\n      {portionCount > portionNumber && endPages}\r\n      {portionCount > portionNumber &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber + 1)\r\n      }}> next </button>}\r\n\r\n    </div>*/} {/*прокрутка по 10*/}\r\n  </div>\r\n}\r\n\r\nexport default Paginator;\r\n\r\ntype ShowButtonPropsType = {\r\n  currentPage: number,\r\n  page: number,\r\n  onPageChanged: (currentPage: number) => void\r\n}\r\n\r\nconst ShowButton = ({currentPage, page, onPageChanged}: ShowButtonPropsType) => {\r\n  let className = currentPage === page ? s.selectedPage : s.page\r\n  return <button className={className}\r\n                 key={page}\r\n                 onClick={() => {\r\n                   onPageChanged(page)\r\n                 }}> {page} </button>\r\n}","D:\\it\\04\\my-app\\src\\components\\users\\User.tsx",[],"D:\\it\\04\\my-app\\src\\components\\common\\avatar.tsx",[],"D:\\it\\04\\my-app\\src\\components\\common\\paginator\\MultiRangeSlider.tsx",["297"],"D:\\it\\04\\my-app\\src\\components\\common\\paginator\\utils.tsx",[],"D:\\it\\04\\my-app\\src\\components\\common\\paginator\\Select.tsx",["298"],"import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Paginator.module.css\"\r\nimport {\r\n  getUsersThunkCreator,\r\n  setPageSize\r\n} from \"../../../redux/UsersReduser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {StoreStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\nconst Select = () => {\r\n\r\n  const pageSize = useSelector<StoreStateType, number>(state => state.usersPage.pageSize)\r\n  const currentPage = useSelector<StoreStateType, number>(state => state.usersPage.currentPage)\r\n  let [currentPageSize, setCurrentPageSize] = useState(pageSize) // число отобр users на странице\r\n\r\n  let dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersThunkCreator(currentPage, currentPageSize))\r\n  }, [dispatch, currentPage, currentPageSize])\r\n\r\n  const onChangePageSize = (p: number) => {\r\n    setCurrentPageSize(p)\r\n    dispatch(setPageSize(p))\r\n  }\r\n\r\n  return <div>\r\n    <select value={currentPageSize} onChange={e => onChangePageSize(Number(e.currentTarget.value))}>\r\n      <option value={1}>1</option>\r\n      <option value={2}>2</option>\r\n      <option value={5}>5</option>\r\n      <option value={10}>10</option>\r\n      <option value={20}>20</option>\r\n    </select>\r\n  </div>\r\n}\r\n\r\nexport default Select;\r\n","D:\\it\\04\\my-app\\src\\Hoc\\withSuspense.tsx",["299","300"],"import React, {Component, ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../components/common/preloader\";\r\n\r\ntype MapStatePropsType = {\r\n\r\n}\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n  return (props: MapStatePropsType) => {\r\n    return <React.Suspense fallback={<Preloader/>}> <Component {...props as T}/> </React.Suspense>\r\n  }\r\n}\r\n\r\n",{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"301","replacedBy":"305"},{"ruleId":"303","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"311","line":1,"column":27,"nodeType":"309","messageId":"310","endLine":1,"endColumn":35},{"ruleId":"307","severity":1,"message":"312","line":2,"column":9,"nodeType":"309","messageId":"310","endLine":2,"endColumn":29},{"ruleId":"307","severity":1,"message":"313","line":2,"column":31,"nodeType":"309","messageId":"310","endLine":2,"endColumn":39},{"ruleId":"307","severity":1,"message":"314","line":2,"column":57,"nodeType":"309","messageId":"310","endLine":2,"endColumn":66},{"ruleId":"307","severity":1,"message":"315","line":5,"column":9,"nodeType":"309","messageId":"310","endLine":5,"endColumn":20},{"ruleId":"307","severity":1,"message":"316","line":5,"column":22,"nodeType":"309","messageId":"310","endLine":5,"endColumn":33},{"ruleId":"307","severity":1,"message":"317","line":6,"column":9,"nodeType":"309","messageId":"310","endLine":6,"endColumn":23},{"ruleId":"307","severity":1,"message":"311","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":24},{"ruleId":"301","replacedBy":"318"},{"ruleId":"303","replacedBy":"319"},{"ruleId":"301","replacedBy":"320"},{"ruleId":"303","replacedBy":"321"},{"ruleId":"307","severity":1,"message":"322","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":27},{"ruleId":"307","severity":1,"message":"323","line":1,"column":29,"nodeType":"309","messageId":"310","endLine":1,"endColumn":42},{"ruleId":"307","severity":1,"message":"311","line":1,"column":44,"nodeType":"309","messageId":"310","endLine":1,"endColumn":52},{"ruleId":"307","severity":1,"message":"324","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":15},{"ruleId":"307","severity":1,"message":"325","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":15},{"ruleId":"307","severity":1,"message":"326","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":18},{"ruleId":"307","severity":1,"message":"327","line":5,"column":9,"nodeType":"309","messageId":"310","endLine":5,"endColumn":11},{"ruleId":"307","severity":1,"message":"328","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":23},{"ruleId":"307","severity":1,"message":"329","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":20},{"ruleId":"307","severity":1,"message":"330","line":10,"column":9,"nodeType":"309","messageId":"310","endLine":10,"endColumn":25},{"ruleId":"307","severity":1,"message":"331","line":13,"column":9,"nodeType":"309","messageId":"310","endLine":13,"endColumn":17},{"ruleId":"301","replacedBy":"320"},{"ruleId":"303","replacedBy":"321"},{"ruleId":"307","severity":1,"message":"322","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":27},{"ruleId":"307","severity":1,"message":"332","line":17,"column":9,"nodeType":"309","messageId":"310","endLine":17,"endColumn":26},{"ruleId":"301","replacedBy":"333"},{"ruleId":"303","replacedBy":"334"},{"ruleId":"307","severity":1,"message":"335","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"322","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":27},{"ruleId":"307","severity":1,"message":"323","line":1,"column":29,"nodeType":"309","messageId":"310","endLine":1,"endColumn":42},{"ruleId":"307","severity":1,"message":"311","line":1,"column":44,"nodeType":"309","messageId":"310","endLine":1,"endColumn":52},{"ruleId":"307","severity":1,"message":"324","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":15},{"ruleId":"307","severity":1,"message":"336","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":12},{"ruleId":"307","severity":1,"message":"329","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":20},{"ruleId":"307","severity":1,"message":"337","line":5,"column":9,"nodeType":"309","messageId":"310","endLine":5,"endColumn":17},{"ruleId":"307","severity":1,"message":"338","line":5,"column":19,"nodeType":"309","messageId":"310","endLine":5,"endColumn":24},{"ruleId":"307","severity":1,"message":"339","line":12,"column":16,"nodeType":"309","messageId":"310","endLine":12,"endColumn":32},{"ruleId":"307","severity":1,"message":"340","line":60,"column":6,"nodeType":"309","messageId":"310","endLine":60,"endColumn":31},{"ruleId":"307","severity":1,"message":"341","line":2,"column":9,"nodeType":"309","messageId":"310","endLine":2,"endColumn":16},{"ruleId":"307","severity":1,"message":"342","line":10,"column":7,"nodeType":"309","messageId":"310","endLine":10,"endColumn":22},{"ruleId":"307","severity":1,"message":"343","line":19,"column":7,"nodeType":"309","messageId":"310","endLine":19,"endColumn":25},{"ruleId":"301","replacedBy":"318"},{"ruleId":"303","replacedBy":"319"},{"ruleId":"307","severity":1,"message":"344","line":19,"column":7,"nodeType":"309","messageId":"310","endLine":19,"endColumn":14},{"ruleId":"307","severity":1,"message":"345","line":20,"column":9,"nodeType":"309","messageId":"310","endLine":20,"endColumn":17},{"ruleId":"307","severity":1,"message":"346","line":2,"column":16,"nodeType":"309","messageId":"310","endLine":2,"endColumn":25},{"ruleId":"301","replacedBy":"347"},{"ruleId":"303","replacedBy":"348"},{"ruleId":"307","severity":1,"message":"322","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":27},{"ruleId":"307","severity":1,"message":"323","line":1,"column":29,"nodeType":"309","messageId":"310","endLine":1,"endColumn":42},{"ruleId":"307","severity":1,"message":"349","line":3,"column":9,"nodeType":"309","messageId":"310","endLine":3,"endColumn":26},{"ruleId":"307","severity":1,"message":"350","line":4,"column":9,"nodeType":"309","messageId":"310","endLine":4,"endColumn":21},{"ruleId":"307","severity":1,"message":"351","line":6,"column":6,"nodeType":"309","messageId":"310","endLine":6,"endColumn":38},{"ruleId":"307","severity":1,"message":"352","line":2,"column":9,"nodeType":"309","messageId":"310","endLine":2,"endColumn":16},{"ruleId":"307","severity":1,"message":"335","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"335","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"307","severity":1,"message":"353","line":27,"column":9,"nodeType":"309","messageId":"310","endLine":27,"endColumn":21},{"ruleId":"354","severity":1,"message":"355","line":180,"column":6,"nodeType":"356","endLine":180,"endColumn":8,"suggestions":"357"},{"ruleId":"307","severity":1,"message":"358","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":9},{"ruleId":"307","severity":1,"message":"346","line":1,"column":16,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"341","line":2,"column":9,"nodeType":"309","messageId":"310","endLine":2,"endColumn":16},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],["359"],["360"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'getUsersThunkCreator' is defined but never used.","'setUsers' is defined but never used.","'UsersType' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'StoreStateType' is defined but never used.",["359"],["360"],["359"],["360"],"'ChangeEvent' is defined but never used.","'KeyboardEvent' is defined but never used.","'classes' is defined but never used.","'Message' is defined but never used.","'DialogItem' is defined but never used.","'v1' is defined but never used.","'DialogsMessages' is defined but never used.","'StoreContext' is defined but never used.","'DialogsPropsType' is defined but never used.","'Redirect' is defined but never used.","'onKeyPressHandler' is assigned a value but never used.",["359"],["360"],"'React' is defined but never used.","'Post' is defined but never used.","'Dispatch' is defined but never used.","'Store' is defined but never used.","'setUserProfileAC' is defined but never used.","'ProfileContainerPropsType' is defined but never used.","'connect' is defined but never used.","'mapStateToProps' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'message' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'Component' is defined but never used.",["359"],["360"],"'InjectedFormProps' is defined but never used.","'FormDataType' is defined but never used.","'TextereaFormsControllerPropsType' is defined but never used.","'authAPI' is defined but never used.","'portionCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'draw' and 'update'. Either include them or remove the dependency array.","ArrayExpression",["361"],"'s' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},"Update the dependencies array to be: [draw, update]",{"range":"364","text":"365"},[5565,5567],"[draw, update]"]